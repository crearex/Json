apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'signing'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

buildDir = 'build'

group = 'ch.crearex'
version = '2.0'

ext {
	groupId = group
	artifactName = 'Crearex JSON API'
	artifactId = 'ch.crearex.json'
	title = artifactName + ' ' + project.version
	description = "JSON Parser including a partial JSON-Schema Implementation"
}

dependencies {	
	testCompile 'junit:junit:4.12';
	testCompile 'org.hamcrest:hamcrest-all:1.3';
}

repositories {
	mavenCentral()
}


jar {
	baseName = project.artifactId
	version = project.version
    manifest {
        attributes("Implementation-Title": "ch.crearex.json",
                   "Implementation-Version": version,
				   "Group-Id": project.groupId,
				   "Artifact-Id": project.artifactId,
				   "Bundle-Version": project.version,
				   "Created-By": "Markus Niedermann")
		from 'METAINF/MANIFEST.MF'
    }
}

task sourceJar(type: Jar) {
   baseName = project.artifactId
   version = project.version
   from sourceSets.main.allJava
   classifier 'sources'
}

task javadocJar(type: Jar) {
   baseName = project.artifactId
   version = project.version
   from javadoc
   classifier 'javadoc'
}

artifacts {
	archives jar
	archives sourceJar
	archives javadocJar
}
 
signing {
    sign configurations.archives
}

javadoc {
	title = 'Crearex JSON API ' + project.version
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            customizePom(pom)
            groupId project.groupId
            artifactId project.artifactId 
            version project.version

            from components.java

            // create the sign pom artifact
            pom.withXml {
                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
            }

//            artifact(sourceJar) {
//                classifier = 'sources'
//            }
//            artifact(javadocJar) {
//                classifier = 'javadoc'
//            }

            // create the signed artifacts
            project.tasks.signArchives.signatureFiles.each {
                artifact(it) {
                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                    if (matcher.find()) {
                        classifier = matcher.group(1)
                    } else {
                        classifier = null
                    }
                    extension = 'jar.asc'
                }
            }
        }
    }
    repositories {
		maven {
            url "D:/ws/repository"
        }
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        // eliminate test-scoped dependencies (no need in maven central POMs)
        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            description project.description
            name project.artifactName
            url 'https://github.com/crearex/Json'
            organization {
                name 'ch.crearex'
                url 'http://www.crearex.ch/'
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/crearex/Json/issues'
            }
            licenses {
                license {
					name 'Apache License, Version 2.0'
                    url 'https://github.com/crearex/APACHE-LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
			
			scm {
			  url 'https://github.com/crearex/Json'
			  connection 'scm:git:git@github.com/crearex/Json.git'
			  developerConnection 'scm:git:git@github.com/crearex/Json.git'  
			}
			
            developers {
                developer {
                    name 'Markus Niedermann'
                }
            }
        }
    }
}

model {
    tasks.generatePomFileForMavenJavaPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
    tasks.publishMavenJavaPublicationToMavenLocal {
        dependsOn project.tasks.signArchives
    }
    tasks.publishMavenJavaPublicationToMavenRepository {
        dependsOn project.tasks.signArchives
    }
}

task wrapper(type: Wrapper) {
}